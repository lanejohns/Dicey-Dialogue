[{"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/index.js":"1","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/App.js":"2","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/session.js":"3","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/csrf.js":"4","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/index.js":"5","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/LoginFormPage/index.js":"6","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/index.js":"7","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/SignupFormPage/index.js":"8","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Home/index.js":"9","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js":"10","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/CreateTalePage/index.js":"11","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/utils/apiUtil.js":"12","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/reducers/tales.js":"13","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/ViewTale/index.js":"14"},{"size":965,"mtime":1611505590619,"results":"15","hashOfConfig":"16"},{"size":1352,"mtime":1611852768428,"results":"17","hashOfConfig":"16"},{"size":1671,"mtime":1611347182476,"results":"18","hashOfConfig":"16"},{"size":1455,"mtime":1611683772950,"results":"19","hashOfConfig":"16"},{"size":775,"mtime":1611695268325,"results":"20","hashOfConfig":"16"},{"size":3713,"mtime":1611505590614,"results":"21","hashOfConfig":"16"},{"size":917,"mtime":1611843405721,"results":"22","hashOfConfig":"16"},{"size":5074,"mtime":1611505590617,"results":"23","hashOfConfig":"16"},{"size":4190,"mtime":1611847406035,"results":"24","hashOfConfig":"16"},{"size":1098,"mtime":1611615685063,"results":"25","hashOfConfig":"16"},{"size":1659,"mtime":1611785395444,"results":"26","hashOfConfig":"16"},{"size":966,"mtime":1611857849955,"results":"27","hashOfConfig":"16"},{"size":1266,"mtime":1611857627734,"results":"28","hashOfConfig":"16"},{"size":1126,"mtime":1611861375407,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1oyiolc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/index.js",["63","64"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport { restoreCSRF, fetch } from './store/csrf';\nimport * as sessionActions from './store/session'\n\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nfunction Root() {\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ReduxProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["65","66"],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/App.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/session.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/csrf.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/LoginFormPage/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/SignupFormPage/index.js",["67"],"import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as sessionActions from '../../store/session';\nimport './SignupForm.css'\n\nconst SignupFormPage = () => {\n    const dispatch = useDispatch()\n    const sessionUser = useSelector((state) => state.session.user)\n    const [email, setEmail] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] =useState(\"\")\n    const [errors, setErrors] = useState([])\n\n    if(sessionUser) return <Redirect to=\"/\" />\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if(password === confirmPassword) {\n            setErrors([])\n            return dispatch(sessionActions.signup({ email, username, password }))\n                .catch(res => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors)\n                })\n        }\n        return setErrors([\"Confirm password field must be the same as the Password field\"])\n    }\n\n    return (\n        // <div className=\"background inline\" style={{height: \"70%\"}}>\n        //     <div className=\"container\" style={{width: \"500px\"}}>\n        //         <form className=\"inline text-center border border-5 border-dark rounded bg-light\" onSubmit={handleSubmit}>\n        //             <ul>\n        //                 {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n        //             </ul>\n        //             <label>\n        //                 Email\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"text\"\n        //                 value={email}\n        //                 onChange={(event) => setEmail(event.target.value)}\n        //                 required\n        //                 />\n        //             <div></div>\n        //             <label>\n        //                 Username\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"text\"\n        //                 value={username}\n        //                 onChange={(event) => setUsername(event.target.value)}\n        //                 required\n        //                 />\n        //             <div></div>\n        //             <label>\n        //                 Password\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"password\"\n        //                 value={password}\n        //                 onChange={(event) => setPassword(event.target.value)}\n        //                 />\n        //             <div></div>\n        //             <label>\n        //                 Confirm Password\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"password\"\n        //                 value={confirmPassword}\n        //                 onChange={(event) => setConfirmPassword(event.target.value)}\n        //                 />\n        //             <div></div>\n        //             <button className=\"btn btn-outline-dark btn-sm m-1\" type=\"submit\">Sign Up</button>\n        //         </form>\n        //     </div>\n        // </div>\n        <div className=\"container text-center\">\n            <form className=\"position-absolute top-50 start-50 translate-middle border border-dark border-4 text-white bg-dark\" style={{width: \"500px\"}}>\n                <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                </ul>\n                <label>Email</label>\n                <div></div>\n                <input\n                type=\"text\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                required\n                />\n                <div></div>\n                <label>Username</label>\n                <div></div>\n                <input\n                type=\"text\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n                required\n                />\n                <div></div>\n                <label>Password</label>\n                <div></div>\n                <input\n                type=\"password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n                />\n                <div></div>\n                <label>Confirm Password</label>\n                <div></div>\n                <input\n                type=\"password\"\n                value={confirmPassword}\n                onChange={(event) => setConfirmPassword(event.target.value)}\n                />\n                <div></div>\n                <button className=\"btn btn-outline-light btn-sm m-2\" type=\"submit\">Sign Up</button>\n                <h3>We hope you enjoy our app!</h3>\n            </form>\n        </div>\n    )\n}\n\nexport default SignupFormPage","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Home/index.js",["68","69","70","71","72","73"],"import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from \"react-router-dom\"\nimport { fetchTales } from '../../utils/apiUtil'\nimport { receiveTales } from '../../store/reducers/tales'\nimport { fetch } from '../../store/csrf'\nimport { parser } from 'react-html-parser'\nimport './Home.css'\n\n    const Home = () => {\n        // const parser = new DOMParser()\n        const [tales, setTales] = useState([])\n        // create a slice of state for tales\n\n        // const stateTales = useSelector((state => Object.values(state)))\n        const stateTales = useSelector((state => state.tales))\n\n        // const looper = (objectsTales) => {\n        //     for (const key in objectsTales) {\n        //         setTales([...tales, key.title])\n        //         console.log(key.title)\n        //     }\n        // }\n\n        async function fetchTales() {\n            const response = await fetch('/api/tales')\n            if(!response.ok) throw response\n            const { tales } = await response.data\n            setTales(tales)\n            console.log(tales)\n        }\n\n        const dispatch = useDispatch()\n        \n\n        // useEffect(() => {\n        //     const getAllTales = async () => {\n        //         await dispatch(fetchTales())\n        //     }\n        //     const results = getAllTales()\n        //     setTales(results)\n        // }, [])\n\n        useEffect(() => {\n            fetchTales()\n            console.log(tales)\n        }, [])\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n                    <h1 className=\"display-4\">Welcome to Dicey Dialogue!</h1>\n                        <p className=\"lead\">There are twenty sides to every story, tell yours!</p>\n                        <hr className=\"my-4\"></hr>\n                        <p>Do you wish to read the lore of others or create your own tale? Click below and venture forth.</p>\n                        <button className=\"btn btn-outline-light\">Lore</button>\n                        <NavLink to=\"/newtale\" className=\"btn btn-outline-light m-2\">Tell Your Tale</NavLink>\n                        </div>\n                    <h1 className=\"featuredTales\">Featured Tales</h1>\n                    {/* We will want a way to query the database for the most recent tale, then render it  */}\n                    {tales.length > 1 && (\n                        <div className=\"card row col-6\">\n                            <h3 className=\"card-body\">\n                                <h4 className=\"card-header\">{tales[0].title}</h4>\n                                <h5 className=\"card-text mt-2\">The first tale posted to Dicey Dialogue!</h5>\n                            </h3>\n                        {/* <p>{tales[1].title}</p>\n                        <p>{tales[2].title}</p>\n                        <p>{tales[3].title}</p> */}\n                        </div>\n                    )}\n                    {tales.length > 1 && (\n                        <div className=\"card row col-6\">\n                            <h3 className=\"card-body\">\n                                <h4 className=\"card-header\">{tales[1].title}</h4>\n                                <h5 className=\"card-text mt-2\">The second tale posted to Dicey Dialogue!</h5>\n                            </h3>\n                        {/* <p>{tales[1].title}</p>\n                        <p>{tales[2].title}</p>\n                        <p>{tales[3].title}</p> */}\n                        </div>\n                    )}\n                    {/* {console.log(\"this is the object that contains other objects\", objectsTales)}\n                    {stateTales && looper(objectsTales)} */}\n                    {/* {stateTales && looper(stateTales)} */}\n                    {/* {console.log(\"this is the object that contains other objects\", objectsTales)} */}\n                    {/* {console.log(\"this should be tales\", tales)} */}\n                    {/* {stateTales && ( */}\n                        {/* <div>{stateTales.map(tale => <div>{tale}</div>)}</div> */}\n                    {/* )} */}\n                    </div>\n        </>\n    )\n}\n\nexport default Home","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/CreateTalePage/index.js",["74","75"],"import ReactQuill from \"react-quill\"\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\"\nimport { addTale } from \"../../utils/apiUtil\"\nimport \"./CreateTalePage.css\"\n\n\nconst CreateTalePage = () => {\n    const [content, setContent] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const handleChange = (value) => {\n        setContent(value)\n    }\n\n    const handleClick = (value) => {\n        setContent(value)\n        history.push('/')\n    }\n\n    const handleTitle = (value) => {\n        setTitle(value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        const payload = {\n            title,\n            content\n        }\n        const submitTale = await dispatch(addTale(payload))\n        if (submitTale) {\n            history.push(\"/\")\n        }\n    }\n\n\n\n    return (\n        <div className=\"container border border-dark rounded h-25 taleEditor\">\n        <p>Feel free to write about your experiences as a GM/player, any questions you may have for the community, or just a fun topic to speak on!</p>\n        <form onSubmit={handleSubmit}>\n            <input className=\"border border-dark rounded taleTitle\" value={title} onChange={(event) => setTitle(event.target.value)} placeholder=\"title\"/>\n            <ReactQuill value={content} onChange={handleChange} />\n            <button disabled={content.length < 0 && title.length < 0} type=\"submit\" className=\"btn btn-outline-dark m-2\" >Submit</button>\n        </form>\n        </div>\n    )\n}\n\nexport default CreateTalePage","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/utils/apiUtil.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/reducers/tales.js",["76","77"],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/ViewTale/index.js",["78","79","80"],{"ruleId":"81","severity":1,"message":"82","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":9},{"ruleId":"81","severity":1,"message":"85","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"81","severity":1,"message":"90","line":18,"column":11,"nodeType":"83","messageId":"84","endLine":18,"endColumn":23},{"ruleId":"81","severity":1,"message":"91","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":20},{"ruleId":"81","severity":1,"message":"92","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":22},{"ruleId":"81","severity":1,"message":"93","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":16},{"ruleId":"81","severity":1,"message":"94","line":16,"column":15,"nodeType":"83","messageId":"84","endLine":16,"endColumn":25},{"ruleId":"81","severity":1,"message":"95","line":33,"column":15,"nodeType":"83","messageId":"84","endLine":33,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":47,"column":12,"nodeType":"98","endLine":47,"endColumn":14,"suggestions":"99"},{"ruleId":"81","severity":1,"message":"100","line":19,"column":11,"nodeType":"83","messageId":"84","endLine":19,"endColumn":22},{"ruleId":"81","severity":1,"message":"101","line":24,"column":11,"nodeType":"83","messageId":"84","endLine":24,"endColumn":22},{"ruleId":"81","severity":1,"message":"102","line":15,"column":7,"nodeType":"83","messageId":"84","endLine":15,"endColumn":19},{"ruleId":"81","severity":1,"message":"103","line":29,"column":17,"nodeType":"83","messageId":"84","endLine":29,"endColumn":29},{"ruleId":"81","severity":1,"message":"104","line":8,"column":11,"nodeType":"83","messageId":"84","endLine":8,"endColumn":18},{"ruleId":"81","severity":1,"message":"105","line":12,"column":12,"nodeType":"83","messageId":"84","endLine":12,"endColumn":16},{"ruleId":"96","severity":1,"message":"106","line":18,"column":8,"nodeType":"98","endLine":18,"endColumn":18,"suggestions":"107"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["108"],"no-negated-in-lhs",["109"],"'handleSubmit' is assigned a value but never used.","'fetchTales' is defined but never used.","'receiveTales' is defined but never used.","'parser' is defined but never used.","'stateTales' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tales'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'handleClick' is assigned a value but never used.","'handleTitle' is assigned a value but never used.","'initialState' is assigned a value but never used.","'anotherState' is assigned a value but never used.","'history' is assigned a value but never used.","'tale' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'taleId' and 'taleSelector'. Either include them or remove the dependency array.",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [tales]",{"range":"116","text":"117"},"Update the dependencies array to be: [dispatch, taleId, taleSelector]",{"range":"118","text":"119"},[1513,1515],"[tales]",[639,649],"[dispatch, taleId, taleSelector]"]