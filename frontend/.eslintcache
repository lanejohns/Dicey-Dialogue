[{"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/index.js":"1","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/App.js":"2","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/session.js":"3","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/csrf.js":"4","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/index.js":"5","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/LoginFormPage/index.js":"6","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/index.js":"7","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/SignupFormPage/index.js":"8","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Home/index.js":"9","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js":"10","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/CreateTalePage/index.js":"11","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/utils/apiUtil.js":"12","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/reducers/tales.js":"13"},{"size":965,"mtime":1611505590619,"results":"14","hashOfConfig":"15"},{"size":1217,"mtime":1611516141733,"results":"16","hashOfConfig":"15"},{"size":1671,"mtime":1611347182476,"results":"17","hashOfConfig":"15"},{"size":1455,"mtime":1611683772950,"results":"18","hashOfConfig":"15"},{"size":775,"mtime":1611695268325,"results":"19","hashOfConfig":"15"},{"size":3713,"mtime":1611505590614,"results":"20","hashOfConfig":"15"},{"size":917,"mtime":1611505590615,"results":"21","hashOfConfig":"15"},{"size":5074,"mtime":1611505590617,"results":"22","hashOfConfig":"15"},{"size":3277,"mtime":1611771550767,"results":"23","hashOfConfig":"15"},{"size":1098,"mtime":1611615685063,"results":"24","hashOfConfig":"15"},{"size":1476,"mtime":1611768375098,"results":"25","hashOfConfig":"15"},{"size":585,"mtime":1611773190220,"results":"26","hashOfConfig":"15"},{"size":784,"mtime":1611706032508,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1oyiolc",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/index.js",["59","60"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport { restoreCSRF, fetch } from './store/csrf';\nimport * as sessionActions from './store/session'\n\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nfunction Root() {\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ReduxProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["61","62"],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/App.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/session.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/csrf.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/LoginFormPage/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/SignupFormPage/index.js",["63"],"import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as sessionActions from '../../store/session';\nimport './SignupForm.css'\n\nconst SignupFormPage = () => {\n    const dispatch = useDispatch()\n    const sessionUser = useSelector((state) => state.session.user)\n    const [email, setEmail] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] =useState(\"\")\n    const [errors, setErrors] = useState([])\n\n    if(sessionUser) return <Redirect to=\"/\" />\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if(password === confirmPassword) {\n            setErrors([])\n            return dispatch(sessionActions.signup({ email, username, password }))\n                .catch(res => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors)\n                })\n        }\n        return setErrors([\"Confirm password field must be the same as the Password field\"])\n    }\n\n    return (\n        // <div className=\"background inline\" style={{height: \"70%\"}}>\n        //     <div className=\"container\" style={{width: \"500px\"}}>\n        //         <form className=\"inline text-center border border-5 border-dark rounded bg-light\" onSubmit={handleSubmit}>\n        //             <ul>\n        //                 {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n        //             </ul>\n        //             <label>\n        //                 Email\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"text\"\n        //                 value={email}\n        //                 onChange={(event) => setEmail(event.target.value)}\n        //                 required\n        //                 />\n        //             <div></div>\n        //             <label>\n        //                 Username\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"text\"\n        //                 value={username}\n        //                 onChange={(event) => setUsername(event.target.value)}\n        //                 required\n        //                 />\n        //             <div></div>\n        //             <label>\n        //                 Password\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"password\"\n        //                 value={password}\n        //                 onChange={(event) => setPassword(event.target.value)}\n        //                 />\n        //             <div></div>\n        //             <label>\n        //                 Confirm Password\n        //             </label>\n        //             <div></div>\n        //                 <input\n        //                 type=\"password\"\n        //                 value={confirmPassword}\n        //                 onChange={(event) => setConfirmPassword(event.target.value)}\n        //                 />\n        //             <div></div>\n        //             <button className=\"btn btn-outline-dark btn-sm m-1\" type=\"submit\">Sign Up</button>\n        //         </form>\n        //     </div>\n        // </div>\n        <div className=\"container text-center\">\n            <form className=\"position-absolute top-50 start-50 translate-middle border border-dark border-4 text-white bg-dark\" style={{width: \"500px\"}}>\n                <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                </ul>\n                <label>Email</label>\n                <div></div>\n                <input\n                type=\"text\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                required\n                />\n                <div></div>\n                <label>Username</label>\n                <div></div>\n                <input\n                type=\"text\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n                required\n                />\n                <div></div>\n                <label>Password</label>\n                <div></div>\n                <input\n                type=\"password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n                />\n                <div></div>\n                <label>Confirm Password</label>\n                <div></div>\n                <input\n                type=\"password\"\n                value={confirmPassword}\n                onChange={(event) => setConfirmPassword(event.target.value)}\n                />\n                <div></div>\n                <button className=\"btn btn-outline-light btn-sm m-2\" type=\"submit\">Sign Up</button>\n                <h3>We hope you enjoy our app!</h3>\n            </form>\n        </div>\n    )\n}\n\nexport default SignupFormPage","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Home/index.js",["64","65","66","67","68"],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/Navigation/ProfileButton.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/components/CreateTalePage/index.js",["69","70","71","72"],"import ReactQuill from \"react-quill\"\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\"\nimport \"./CreateTalePage.css\"\n\n\nconst CreateTalePage = () => {\n    const [text, setText] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const handleChange = (value) => {\n        setText(value)\n    }\n\n    const handleClick = (value) => {\n        setText(value)\n        history.push('/')\n    }\n\n    const handleTitle = (value) => {\n        setTitle(value)\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        const payload = {\n            title,\n            text\n        }\n        // const submitTale = await dispatch(thunkactionhere(payload))\n    }\n\n    return (\n        <div className=\"container border border-dark rounded h-25 taleEditor\">\n        <p>Feel free to write about your experiences as a GM/player, any questions you may have for the community, or just a fun topic to speak on!</p>\n        <form>\n            <input className=\"border border-dark rounded\"value={title} onChange={(event) => setTitle(event.target.value)} placeholder=\"title\"/>\n            <ReactQuill value={text} onChange={handleChange} />\n            <button type=\"submit\" className=\"btn btn-outline-dark m-2\" onSubmit={handleClick} >Submit</button>\n        </form>\n        </div>\n    )\n}\n\nexport default CreateTalePage","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/utils/apiUtil.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/frontend/src/store/reducers/tales.js",["73"],"// Action creators\nexport const taleAdded = (tale) => {\n    return { type: 'RECEIVE_TALE', tale}\n}\n\nexport const receiveTales = (tales) => {\n    return { type: 'RECEIVE_TALES', tales}\n}\n\n// Reducers\nconst initialState = []\nexport const talesReducer = (state={}, action) => {\n    let newState = Object.assign({}, state)\n    switch(action.type) {\n        case 'RECEIVE_TALE':\n            return Object.assign(newState, {\n                [action.tale.id]: action.tale,\n            });\n        case 'RECEIVE_TALES':\n            let nextState = {}\n            // console.log(\"THIS IS ACTION.TALES\", action.tales)\n            action.tales.forEach((tale) => (nextState[tale.id] = tale))\n            return Object.assign(newState, nextState)\n\n        default:\n            return state\n    }\n}",{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":9},{"ruleId":"74","severity":1,"message":"78","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"74","severity":1,"message":"83","line":18,"column":11,"nodeType":"76","messageId":"77","endLine":18,"endColumn":23},{"ruleId":"74","severity":1,"message":"84","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":20},{"ruleId":"74","severity":1,"message":"85","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":22},{"ruleId":"74","severity":1,"message":"86","line":14,"column":15,"nodeType":"76","messageId":"77","endLine":14,"endColumn":25},{"ruleId":"74","severity":1,"message":"87","line":32,"column":15,"nodeType":"76","messageId":"77","endLine":32,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":46,"column":12,"nodeType":"90","endLine":46,"endColumn":14,"suggestions":"91"},{"ruleId":"74","severity":1,"message":"87","line":12,"column":11,"nodeType":"76","messageId":"77","endLine":12,"endColumn":19},{"ruleId":"74","severity":1,"message":"92","line":23,"column":11,"nodeType":"76","messageId":"77","endLine":23,"endColumn":22},{"ruleId":"74","severity":1,"message":"83","line":27,"column":11,"nodeType":"76","messageId":"77","endLine":27,"endColumn":23},{"ruleId":"74","severity":1,"message":"93","line":29,"column":15,"nodeType":"76","messageId":"77","endLine":29,"endColumn":22},{"ruleId":"74","severity":1,"message":"94","line":11,"column":7,"nodeType":"76","messageId":"77","endLine":11,"endColumn":19},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'handleSubmit' is assigned a value but never used.","'fetchTales' is defined but never used.","'receiveTales' is defined but never used.","'stateTales' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tales'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'handleTitle' is assigned a value but never used.","'payload' is assigned a value but never used.","'initialState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [tales]",{"range":"100","text":"101"},[1471,1473],"[tales]"]