[{"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/index.js":"1","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/App.js":"2","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/store/index.js":"3","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/store/csrf.js":"4","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/store/session.js":"5","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/components/LoginFormPage/index.js":"6","/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/components/SignupFormPage/index.js":"7"},{"size":813,"mtime":1611339921960,"results":"8","hashOfConfig":"9"},{"size":742,"mtime":1611346292949,"results":"10","hashOfConfig":"9"},{"size":704,"mtime":1611339480157,"results":"11","hashOfConfig":"9"},{"size":1455,"mtime":1611338239563,"results":"12","hashOfConfig":"9"},{"size":1671,"mtime":1611347182476,"results":"13","hashOfConfig":"9"},{"size":1672,"mtime":1611342319170,"results":"14","hashOfConfig":"9"},{"size":2166,"mtime":1611346404772,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dsytm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/index.js",[],["32","33"],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/App.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/store/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/store/csrf.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/store/session.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/components/LoginFormPage/index.js",[],"/Users/lanejohns/Desktop/appAcademy/React-Solo-Project/authenticate-me/frontend/src/components/SignupFormPage/index.js",["34"],"import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as sessionActions from '../../store/session';\nimport './SignupForm.css'\n\nconst SignupFormPage = () => {\n    const dispatch = useDispatch()\n    const sessionUser = useSelector((state) => state.session.user)\n    const [email, setEmail] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] =useState(\"\")\n    const [errors, setErrors] = useState([])\n\n    if(sessionUser) return <Redirect to=\"/\" />\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if(password === confirmPassword) {\n            setErrors([])\n            return dispatch(sessionActions.signup({ email, username, password }))\n                .catch(res => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors)\n                })\n        }\n        return setErrors([\"Confirm password field must be the same as the Password field\"])\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label>\n                Email\n                <input\n                type=\"text\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                required\n                />\n            </label>\n            <label>\n                Username\n                <input\n                type=\"text\"\n                value={username}\n                onCHange={(event) => setUsername(event.target.value)}\n                required\n                />\n            </label>\n            <label>\n                Password\n                <input\n                type=\"password\"\n                value={password}\n                onChange={(event) => setConfirmPassword(event.target.value)}\n                />\n            </label>\n            <button className=\"submitButton\" type=\"submit\">Sign Up</button>\n        </form>\n    )\n}\n\nexport default SignupFormPage",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":22,"nodeType":"41","messageId":"42","endLine":12,"endColumn":33},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'setPassword' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]